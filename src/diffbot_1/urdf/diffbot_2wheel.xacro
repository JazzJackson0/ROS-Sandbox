<?xml version="1.0"?>
<robot name="diffbot_2wheel" xmlns:xacro="http://www.ros.org/wiki/xacro">
<!--include filename="$(find erratic_description)/urdf/erratic_hokuyo_ laser.xacro"/--> 
<xacro:property name="chassis_length" value="0.2397125"/>
<xacro:property name="chassis_width" value="0.1095375"/>
<xacro:property name="chassis_height" value="0.0381"/>
<xacro:property name="chassis_mass" value="1.3"/>

<xacro:property name="caster_radius" value="0.03175"/>
<xacro:property name="caster_length" value="0.0254"/>

<xacro:property name="wheel_radius" value="0.03175"/>
<xacro:property name="wheel_length" value="0.0254"/>
<xacro:property name="wheel_mass" value="0.0283495"/>

<xacro:property name="wheel_x_pos" value="${chassis_length / 4}"/>
<xacro:property name="wheel_y_pos" value="${(chassis_width / 2) + (wheel_length / 2)}"/>
<xacro:property name="wheel_z_pos" value="0"/>

<xacro:property name="caster_x_pos" value="${-(chassis_length / 4)}"/>
<xacro:property name="caster_y_pos" value="0"/>
<xacro:property name="caster_z_pos" value="0"/>

<xacro:macro name="chassis_inertial" params="mass">
    <inertial>
        <mass value="${mass}"/>
        <inertia ixx="${(1/12) * chassis_mass * ( (chassis_height * chassis_height) + (chassis_length * chassis_length)) }" ixy="0" ixz="0"
                iyy="${(1/12) * chassis_mass * ( (chassis_width * chassis_width) + (chassis_height * chassis_height)) }" iyz="0" 
                izz="${(1/12) * chassis_mass * ( (chassis_width * chassis_width) + (chassis_length * chassis_length)) }"/>
        </inertial>
</xacro:macro>

<xacro:macro name="wheel_inertial" params="mass">
    <inertial>
        <mass value="${mass}"/>
        <inertia ixx="${(1/12) * wheel_mass * ( (3 * (wheel_radius * wheel_radius)) + (wheel_length * wheel_length)) }" ixy="0" ixz="0"
                iyy="${(1/12) * wheel_mass * ( (3 * (wheel_radius * wheel_radius)) + (wheel_length * wheel_length)) }" iyz="0" 
                izz="${(1/2) * wheel_mass * (wheel_radius * wheel_radius) }"/>
        </inertial>
</xacro:macro>

<!-- Hokuyo Laser --> 
<!--erratic_hokuyo_laser parent="base_link"> 
    <origin xyz="0.0 0.0 0.0381" rpy="0 0 0"/> 
</erratic_hokuyo_laser-->

<!--Base Link-->  
    <link name="base_link"></link>

    <joint name="base_to_chassis" type="fixed">
        <parent link="base_link"/>
        <child link="chassis_link"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <axis xyz="0 0 0"/>
    </joint>

<!--Chassis Link-->  
    <link name="chassis_link">   
        
        <xacro:chassis_inertial mass="${chassis_mass}"/>

        <collision name="base_link_collision">
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
        </collision>
        
        <visual>
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
            <material name="orange">
                <color rgba="1 0.647 0 1"/>
            </material>
        </visual>
    </link>

    <gazebo reference="chassis_link">
        <material>Gazebo/Orange</material>
    </gazebo>


<!--Rear Caster-->
    <link name="caster_link">
        <collision name="caster_collision">
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="${caster_radius}" length="${caster_length}"/>
            </geometry>
        </collision>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="${caster_radius}" length="${caster_length}"/>
            </geometry>
            <material name="grey">
                <color rgba="0.392 0.392 0.392 1"/>
            </material>
        </visual>
    </link>

    <joint name="caster_joint" type="fixed">
        <parent link="base_link"/>
        <child link="caster_link"/>
        <origin xyz="${caster_x_pos} ${caster_y_pos} ${caster_z_pos}" rpy="${pi/2} 0 0"/>
        <axis xyz="0 0 0"/>
    </joint>

    <gazebo reference="caster_link">
        <material>Gazebo/Grey</material>
    </gazebo>

    
<!--Right Wheel--> 
    <link name="right_wheel">
        
        <xacro:wheel_inertial mass="${wheel_mass}"/>

        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
            </geometry>
        </collision>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
            </geometry>
            <material name="black">
                <color rgba="0 0 0 1"/>
            </material>
        </visual>
    </link>

    <joint name="joint_right_wheel" type="continuous">
        <parent link="base_link"/>
        <child link="right_wheel"/>
        <origin xyz="${wheel_x_pos} ${wheel_y_pos} ${wheel_z_pos}" rpy="${pi/2} 0 0"/>
        <axis xyz="0 0 -1"/>
    </joint>

    <gazebo reference="right_wheel">
        <material>Gazebo/Black</material>
    </gazebo>

<!--Left Wheel--> 
    <link name="left_wheel">
        
        <xacro:wheel_inertial mass="${wheel_mass}"/>

        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
            </geometry>
        </collision>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
            </geometry>
            <material name="black">
                <color rgba="0 0 0 1"/>
            </material>
        </visual>
    </link>

    <joint name="joint_left_wheel" type="continuous">
        <parent link="base_link"/>
        <child link="left_wheel"/>
        <origin xyz="${wheel_x_pos} -${wheel_y_pos} ${wheel_z_pos}" rpy="${pi/2} 0 0"/>
        <axis xyz="0 0 1"/>
    </joint>

    <gazebo reference="left_wheel">
        <material>Gazebo/Black</material>
    </gazebo>

</robot>
